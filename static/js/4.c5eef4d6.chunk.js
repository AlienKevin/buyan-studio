(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{19:function(e,t,n){"use strict";function r(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=Array(t);n<t;n++)r[n]=e[n];return r}function o(e,t,n,r,o,i,a){try{var u=e[i](a),c=u.value}catch(e){return void n(e)}u.done?t(c):Promise.resolve(c).then(r,o)}n.r(t),t.default=function(e){return function(){var t=this,n=arguments;return new Promise(function(r,i){var a=e.apply(t,n);function u(e){o(a,r,i,u,c,"next",e)}function c(e){o(a,r,i,u,c,"throw",e)}u(void 0)})}}(regeneratorRuntime.mark(function e(){var t,n=arguments;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return t=n.length>0&&void 0!==n[0]?n[0]:{},e.abrupt("return",new Promise(function(e){var n=document.createElement("input");n.type="file";var o,i=[].concat((o=t.mimeTypes?t.mimeTypes:[],function(e){if(Array.isArray(e))return r(e)}(o)||function(e){if("undefined"!==typeof Symbol&&Symbol.iterator in Object(e))return Array.from(e)}(o)||function(e){if(e){if("string"===typeof e)return r(e,void 0);var t=Object.prototype.toString.call(e).slice(8,-1);return"Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t?Array.from(e):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?r(e,void 0):void 0}}(o)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),[t.extensions?t.extensions:[]]).join();n.multiple=t.multiple||!1,n.accept=i||"*/*",n.addEventListener("change",function(){e(n.multiple?n.files:n.files[0])}),n.click()}));case 2:case"end":return e.stop()}},e)}))}}]);
//# sourceMappingURL=4.c5eef4d6.chunk.js.map